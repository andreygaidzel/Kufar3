@using Kufar3.Models
<div class="search">
    <div class="search-img"></div>
    <input/>
</div>

<div class="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="search-block">
                <div class="modal-search">
                    <div class="search-img"></div>
                    <input/>
                </div>
                <div class="search-x"></div>
                <div class="search-radio">
                    По дате:
                    <input type="radio" name="search" checked="checked" value="data"/>
                    По цене:
                    <input type="radio" name="search" value="price"/>
                </div>
            </div>
            <div class="search-values">
                <ul>
                </ul>
            </div>
            <div class="counter">
                <b>0/0</b>
            </div>
        </div>
    </div>
</div>


<script>
    var xhr;
    var searchDelay = (function()
    {
        var delayTimer;
        return function(func, delay)
        {
            clearTimeout(delayTimer);
            delayTimer = setTimeout(func, delay);
        }
    })();

    $(function()
    {
        var searchInputModal = $(".modal-search input");
        var searchInput = $(".search input");
        var declarationsContainer = $('.search-values');
        var curentItemsCount;
        var totalItemsCount;
        var sortType;
        var lock = false;
        var xhr;

        $('.search-x').click(function()
        {
            searchInput.val("");
            hideSearch();
            clearModal();
        });

        searchInput.on('input', function()
        {
            showSearch();
            searchInputModal.focus();
            searchInputModal.val(searchInput.val());
        });

        searchInputModal.on('keyup paste', function()
        {
            clearModal();

            curentItemsCount = 0;

            abort();
            
            searchDelay(sendWord(), 500);
        });

        declarationsContainer.scroll(function()
        {
            var scrollTop = $(this).scrollTop();
            var innerHeight = Math.round($(this).innerHeight());
            var scrollHeight = $(this)[0].scrollHeight;
            if (scrollTop + innerHeight >= scrollHeight)
            {
                if (innerHeight === scrollHeight)
                    return;

                if (totalItemsCount > curentItemsCount)
                {
                    sendWord();
                }
            }
        });

        function hideSearch()
        {
            $('body').removeClass('search-visible');
        }

        function showSearch()
        {
            $('body').addClass('search-visible');
        }

        function clearModal()
        {
            curentItemsCount = 0;
            totalItemsCount = 0;
            declarationsContainer.find('ul li').remove();
        }

        function sendWord()
        {
            send(searchInputModal.val());
        }

        function send(searchWord)
        {
            if (!lock)
            {
                xhr = $.ajax({
                    url: '@Url.Action("SearchValue", "Home")',
                    type: 'POST',
                    data: { searchWord: searchWord, curentItemsCount: curentItemsCount, sortType: sortType },
                    beforeSend: function()
                    {
                        lock = true;
                        Spinner.toggle(declarationsContainer);
                    },
                    success: function(data)
                    {
                        declarationsContainer.find('ul').append(data.Data);
                        curentItemsCount = data.CurentItemsCount;
                        totalItemsCount = data.TotalItemsCount;
                        sortType = data.SortType;

                        if (totalItemsCount === 0)
                        {
                            curentItemsCount = 0;
                        }

                        $('.counter b').replaceWith(`<b>${curentItemsCount}/${totalItemsCount}</b>`);;
                    },
                    error: function(xhr, error, status)
                    {
                        console.log(error, status);
                    },
                    complete: function()
                    {
                        lock = false;
                        Spinner.toggle(declarationsContainer);
                    }
                });
            }
        }

        function abort()
        {
            if (xhr && xhr.readyState !== 4)
            {
                xhr.abort();
            }
        }

        $('.search-radio input[type=radio][name=search]').on('change', function()
        {
            clearModal();
            switch ($(this).val())
            {
            case 'data':
                sortType = '@SortTypes.ByDate';
                sendWord();
                break;
            case 'price':
                sortType = '@SortTypes.PriceAsc';
                sendWord();
                break;
            }
        });
    });


</script>